C
C  *INCLUDE UDSRCH
C        WRITE(21,'(''NEWFRAME'')')
C        WRITE(21,'(''SET ORDER X Y'')')
C        DO 10 I = 1, 100
C           X = 0.01*I
C           CALL RSHDIS(X,1,Y)
C           WRITE(21,'(2E15.8)') Y, X
C  10    CONTINUE
C        WRITE(21,'(''JOIN'')')
C        END
C*
C* This version for JLC-I C-band(150) parameter as of 93/04/18
C* with the bremsstrahlung:
C*                   _
C*                  / 1
C*    sig_RC(s) =  /   dz b [ z**(b-1)(1+3b/4) - (1-z/2) ] sig((1-z)s)
C*               _/ 0
C* The beam energy spread is assumed to be flat and has FWHM of 1.0%.
C*
      SUBROUTINE RSHDIS(X,ITYP,Y)
 
      IMPLICIT   REAL*8 ( A-H, O-Z )
      INTEGER*4  ITYP
      REAL   *4  X, Y
C--
      DATA   SGEB / 0.005D0 /
      PARAMETER  ( MXxDAT = 81 )
      REAL   *8  BMDATA(2,0:MXxDAT)
      DATA ( BMDATA(I,0),I=1,2) /  2*0.D0 /
      DATA ((BMDATA(I,J),I=1,2),J= 1,20) /
     . 0.48545795D-03, 0.29999997D-01, 0.14054372D-02, 0.89999974D-01,
     . 0.27523336D-02, 0.14999998D+00, 0.44132359D-02, 0.20999998D+00,
     . 0.63158944D-02, 0.26999998D+00, 0.84426925D-02, 0.32999998D+00,
     . 0.10843817D-01, 0.38999999D+00, 0.13514221D-01, 0.44999999D+00,
     . 0.16343176D-01, 0.50999999D+00, 0.19366439D-01, 0.56999999D+00,
     . 0.22601902D-01, 0.63000000D+00, 0.26061460D-01, 0.69000000D+00,
     . 0.29871970D-01, 0.75000000D+00, 0.33934604D-01, 0.80999994D+00,
     . 0.38228370D-01, 0.86999995D+00, 0.42820461D-01, 0.92999995D+00,
     . 0.47718145D-01, 0.98999995D+00, 0.53076770D-01, 0.10499992D+01,
     . 0.58932371D-01, 0.11099997D+01, 0.65345347D-01, 0.11699991D+01/
      DATA ((BMDATA(I,J),I=1,2),J=21,40) /
     . 0.72354317D-01, 0.12299995D+01, 0.79972267D-01, 0.12900000D+01,
     . 0.88171661D-01, 0.13499994D+01, 0.97324193D-01, 0.14099998D+01,
     . 0.10714698D+00, 0.14699993D+01, 0.11790967D+00, 0.15299997D+01,
     . 0.12928712D+00, 0.15899992D+01, 0.14138091D+00, 0.16499996D+01,
     . 0.15407354D+00, 0.17099991D+01, 0.16741782D+00, 0.17699995D+01,
     . 0.18153602D+00, 0.18299999D+01, 0.19601232D+00, 0.18899994D+01,
     . 0.21097380D+00, 0.19499998D+01, 0.22635764D+00, 0.20099993D+01,
     . 0.24204546D+00, 0.20699997D+01, 0.25813657D+00, 0.21299992D+01,
     . 0.27465200D+00, 0.21899996D+01, 0.29136193D+00, 0.22500000D+01,
     . 0.30806035D+00, 0.23099995D+01, 0.32506090D+00, 0.23699999D+01/
      DATA ((BMDATA(I,J),I=1,2),J=41,60) /
     . 0.34219116D+00, 0.24299994D+01, 0.35953826D+00, 0.24899998D+01,
     . 0.37702304D+00, 0.25499992D+01, 0.39460289D+00, 0.26099997D+01,
     . 0.41200948D+00, 0.26699991D+01, 0.42962921D+00, 0.27299995D+01,
     . 0.44737285D+00, 0.27900000D+01, 0.46503007D+00, 0.28499994D+01,
     . 0.48288137D+00, 0.29099998D+01, 0.50098181D+00, 0.29699993D+01,
     . 0.51009184D+00, 0.30149994D+01, 0.51937228D+00, 0.30449991D+01,
     . 0.52867705D+00, 0.30749998D+01, 0.53815556D+00, 0.31049995D+01,
     . 0.54782224D+00, 0.31349993D+01, 0.55752629D+00, 0.31650000D+01,
     . 0.56730211D+00, 0.31949997D+01, 0.57727879D+00, 0.32249994D+01,
     . 0.58744758D+00, 0.32549992D+01, 0.59792334D+00, 0.32849998D+01/
      DATA ((BMDATA(I,J),I=1,2),J=61,80) /
     . 0.60854942D+00, 0.33149996D+01, 0.61959761D+00, 0.33449993D+01,
     . 0.63108379D+00, 0.33750000D+01, 0.64321190D+00, 0.34049997D+01,
     . 0.65613919D+00, 0.34349995D+01, 0.67013341D+00, 0.34649992D+01,
     . 0.68565989D+00, 0.34949999D+01, 0.70721364D+00, 0.35249996D+01,
     . 0.73489302D+00, 0.35549994D+01, 0.76783139D+00, 0.35849991D+01,
     . 0.80484128D+00, 0.36149998D+01, 0.84421480D+00, 0.36449995D+01,
     . 0.88428217D+00, 0.36749992D+01, 0.91899621D+00, 0.37049999D+01,
     . 0.94641775D+00, 0.37349997D+01, 0.96717727D+00, 0.37649994D+01,
     . 0.98217446D+00, 0.37949991D+01, 0.99207550D+00, 0.38249998D+01,
     . 0.99773514D+00, 0.38549995D+01, 0.99990726D+00, 0.38849993D+01/
      DATA ((BMDATA(I,J),I=1,2),J=81,81) /
     . 0.99999994D+00, 0.39150000D+01/
C
C========< Entry Point >================================================
C
C--
C  Decide which bin X belongs to.
C--
      CALL UDSRCH(MXxDAT,2,1,BMDATA(1,1),DBLE(X),IP)
C--
C  Calculate Y.
C     FRAC = MAX(1.E-6,1+5*SGEB-FRAC)
C     FRAC = -LOG(FRAC)
C--
      IF ( IP.NE.0 .AND. IP.NE.MXxDAT ) THEN
         XL  = BMDATA(1,IP)
         DX  = BMDATA(1,IP+1) - XL
         DF  = (BMDATA(2,IP+1)-BMDATA(2,IP))/DX
         VAL = BMDATA(2,IP) + (X-XL)*DF
      ELSE
         VAL = BMDATA(2,IP)
      ENDIF
      Y   = 1 + 5*SGEB - EXP(-VAL)
C--
C  That's it.
C--
      RETURN
      END
